name: Deploy main to xo

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: registry.xo.builders/${{ secrets.PROJECT_NAME }}/img

jobs:
  XO-build-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: registry.xo.builders
          username: ${{ secrets.XO_BRANCH_MAIN_DOCKER_USERNAME }}
          password: ${{ secrets.XO_BRANCH_MAIN_DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest 

      - name: Create and validate .env file from GitHub secrets
        run: |
          echo "# This file is generated from GitHub secrets by the xo deploy workflow" > .env
          echo "" >> .env

          if [ -z "${{ secrets.ENV_VARS }}" ]; then
            echo "‚ö†Ô∏è  Warning: ENV_VARS secret is empty or not set"
            echo "# No environment variables provided" >> .env
          else
            echo "${{ secrets.ENV_VARS }}" >> .env

            while IFS= read -r line || [ -n "$line" ]; do
              line="$(echo "$line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
              if [ -z "$line" ] || [[ "$line" == \#* ]]; then
                continue
              fi
              if ! [[ "$line" =~ ^[A-Za-z_][A-Za-z0-9_]*=.*$ ]]; then
                echo "‚ùå Invalid environment variable format: $line"
                exit 1
              fi
            done < .env

            echo "‚úÖ .env file created and validated successfully"
            echo "üìä Environment variables count: $(grep -c '^[A-Za-z_]' .env || echo 0)"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secret-files: |
            "env_file=./.env"
